// Code generated by goa v3.4.2, DO NOT EDIT.
//
// Score client
//
// Command:
// $ goa gen sunflower/pkg/api/design -o pkg/api/

package score

import (
	"context"
	"io"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "Score" service client.
type Client struct {
	UploadEndpoint      goa.Endpoint
	ScoreListEndpoint   goa.Endpoint
	ScoreDetailEndpoint goa.Endpoint
}

// NewClient initializes a "Score" service client given the endpoints.
func NewClient(upload, scoreList, scoreDetail goa.Endpoint) *Client {
	return &Client{
		UploadEndpoint:      upload,
		ScoreListEndpoint:   scoreList,
		ScoreDetailEndpoint: scoreDetail,
	}
}

// Upload calls the "Upload" endpoint of the "Score" service.
func (c *Client) Upload(ctx context.Context, p *UploadPayload, req io.ReadCloser) (res *UploadResult, err error) {
	var ires interface{}
	ires, err = c.UploadEndpoint(ctx, &UploadRequestData{Payload: p, Body: req})
	if err != nil {
		return
	}
	return ires.(*UploadResult), nil
}

// ScoreList calls the "ScoreList" endpoint of the "Score" service.
func (c *Client) ScoreList(ctx context.Context, p *ScoreListPayload) (res *ScoreListResult, err error) {
	var ires interface{}
	ires, err = c.ScoreListEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*ScoreListResult), nil
}

// ScoreDetail calls the "ScoreDetail" endpoint of the "Score" service.
func (c *Client) ScoreDetail(ctx context.Context, p *ScoreDetailPayload) (res *ScoreDetailResult, err error) {
	var ires interface{}
	ires, err = c.ScoreDetailEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*ScoreDetailResult), nil
}
