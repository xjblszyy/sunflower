// Code generated by goa v3.4.2, DO NOT EDIT.
//
// Score gRPC client
//
// Command:
// $ goa gen sunflower/pkg/api/design -o pkg/api/

package client

import (
	"context"
	scorepb "sunflower/pkg/api/gen/grpc/score/pb"

	goagrpc "goa.design/goa/v3/grpc"
	goa "goa.design/goa/v3/pkg"
	"google.golang.org/grpc"
)

// Client lists the service endpoint gRPC clients.
type Client struct {
	grpccli scorepb.ScoreClient
	opts    []grpc.CallOption
}

// NewClient instantiates gRPC client for all the Score service servers.
func NewClient(cc *grpc.ClientConn, opts ...grpc.CallOption) *Client {
	return &Client{
		grpccli: scorepb.NewScoreClient(cc),
		opts:    opts,
	}
}

// ScoreList calls the "ScoreList" function in scorepb.ScoreClient interface.
func (c *Client) ScoreList() goa.Endpoint {
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		inv := goagrpc.NewInvoker(
			BuildScoreListFunc(c.grpccli, c.opts...),
			EncodeScoreListRequest,
			DecodeScoreListResponse)
		res, err := inv.Invoke(ctx, v)
		if err != nil {
			return nil, goa.Fault(err.Error())
		}
		return res, nil
	}
}

// ScoreDetail calls the "ScoreDetail" function in scorepb.ScoreClient
// interface.
func (c *Client) ScoreDetail() goa.Endpoint {
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		inv := goagrpc.NewInvoker(
			BuildScoreDetailFunc(c.grpccli, c.opts...),
			EncodeScoreDetailRequest,
			DecodeScoreDetailResponse)
		res, err := inv.Invoke(ctx, v)
		if err != nil {
			return nil, goa.Fault(err.Error())
		}
		return res, nil
	}
}
