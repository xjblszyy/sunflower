// Code generated by goa v3.4.2, DO NOT EDIT.
//
// Score gRPC server
//
// Command:
// $ goa gen sunflower/pkg/api/design -o pkg/api/

package server

import (
	"context"
	scorepb "sunflower/pkg/api/gen/grpc/score/pb"
	score "sunflower/pkg/api/gen/score"

	goagrpc "goa.design/goa/v3/grpc"
	goa "goa.design/goa/v3/pkg"
)

// Server implements the scorepb.ScoreServer interface.
type Server struct {
	ScoreListH   goagrpc.UnaryHandler
	ScoreDetailH goagrpc.UnaryHandler
	scorepb.UnimplementedScoreServer
}

// ErrorNamer is an interface implemented by generated error structs that
// exposes the name of the error as defined in the expr.
type ErrorNamer interface {
	ErrorName() string
}

// New instantiates the server struct with the Score service endpoints.
func New(e *score.Endpoints, uh goagrpc.UnaryHandler) *Server {
	return &Server{
		ScoreListH:   NewScoreListHandler(e.ScoreList, uh),
		ScoreDetailH: NewScoreDetailHandler(e.ScoreDetail, uh),
	}
}

// NewScoreListHandler creates a gRPC handler which serves the "Score" service
// "ScoreList" endpoint.
func NewScoreListHandler(endpoint goa.Endpoint, h goagrpc.UnaryHandler) goagrpc.UnaryHandler {
	if h == nil {
		h = goagrpc.NewUnaryHandler(endpoint, DecodeScoreListRequest, EncodeScoreListResponse)
	}
	return h
}

// ScoreList implements the "ScoreList" method in scorepb.ScoreServer interface.
func (s *Server) ScoreList(ctx context.Context, message *scorepb.ScoreListRequest) (*scorepb.ScoreListResponse, error) {
	ctx = context.WithValue(ctx, goa.MethodKey, "ScoreList")
	ctx = context.WithValue(ctx, goa.ServiceKey, "Score")
	resp, err := s.ScoreListH.Handle(ctx, message)
	if err != nil {
		return nil, goagrpc.EncodeError(err)
	}
	return resp.(*scorepb.ScoreListResponse), nil
}

// NewScoreDetailHandler creates a gRPC handler which serves the "Score"
// service "ScoreDetail" endpoint.
func NewScoreDetailHandler(endpoint goa.Endpoint, h goagrpc.UnaryHandler) goagrpc.UnaryHandler {
	if h == nil {
		h = goagrpc.NewUnaryHandler(endpoint, DecodeScoreDetailRequest, EncodeScoreDetailResponse)
	}
	return h
}

// ScoreDetail implements the "ScoreDetail" method in scorepb.ScoreServer
// interface.
func (s *Server) ScoreDetail(ctx context.Context, message *scorepb.ScoreDetailRequest) (*scorepb.ScoreDetailResponse, error) {
	ctx = context.WithValue(ctx, goa.MethodKey, "ScoreDetail")
	ctx = context.WithValue(ctx, goa.ServiceKey, "Score")
	resp, err := s.ScoreDetailH.Handle(ctx, message)
	if err != nil {
		return nil, goagrpc.EncodeError(err)
	}
	return resp.(*scorepb.ScoreDetailResponse), nil
}
